{"version":3,"sources":["components/Memo.js","contexts/ColorContext.js","components/AddMemo.js","components/MemoList.js","components/Search.js","components/ColorPalette.js","components/Header.js","App.js","index.js"],"names":["StyledMemo","styled","article","props","color","StyledDeleteIcon","AiOutlineDelete","Memo","id","text","date","handleDeleteMemo","onClick","size","colorContext","createContext","StyledTextArea","textarea","StyledSaveIcon","AiOutlineSave","AddMemo","handleAddMemo","useState","memoText","setMemoText","selectedColor","useContext","placeholder","cols","rows","value","onChange","e","target","length","trim","StyledMemoContainer","section","MemoList","memos","map","memo","StyledInputContainer","div","StyledInput","input","AiOutlineSearch","Search","handleSearchMemo","type","StyledPalette","motion","ColorPalette","setSelectedColor","initial","x","animate","whileHover","scale","boxShadow","transition","stiffness","StyledHeader","header","StyledPlusButton","button","Header","handleOpenPalette","openPalette","StyledContainer","App","setMemos","searchText","setSearchText","setOpenPalette","useEffect","savedMemos","JSON","parse","localStorage","getItem","setItem","stringify","Provider","filter","toLowerCase","includes","Date","newMemo","nanoid","toLocaleDateString","newMemos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26361957.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\n\r\nconst StyledMemo = styled.article`\r\n  background-color: ${(props) => props.color};\r\n  border-radius: 1em;\r\n  padding: 1em;\r\n  min-height: 10rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  white-space: pre-wrap;\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nconst StyledDeleteIcon = styled(AiOutlineDelete)`\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst Memo = ({ id, text, date, color, handleDeleteMemo }) => {\r\n  return (\r\n    <StyledMemo color={color}>\r\n      <span>{text}</span>\r\n      <div>\r\n        <small>{date}</small>\r\n        <StyledDeleteIcon onClick={() => handleDeleteMemo(id)} size=\"1.3em\" />\r\n      </div>\r\n    </StyledMemo>\r\n  );\r\n};\r\n\r\nexport default Memo;\r\n","import { createContext } from \"react\";\r\n\r\nexport const colorContext = createContext(\"\");\r\n","import { useState, useContext } from \"react\";\r\nimport { colorContext } from \"../contexts/ColorContext\";\r\nimport styled from \"styled-components\";\r\nimport { AiOutlineSave } from \"react-icons/ai\";\r\n\r\nconst StyledMemo = styled.article`\r\n  background-color: ${(props) => props.color};\r\n  border-radius: 1em;\r\n  padding: 1em;\r\n  min-height: 10rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  white-space: pre-wrap;\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  border: none;\r\n  resize: none;\r\n  background: none;\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst StyledSaveIcon = styled(AiOutlineSave)`\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst AddMemo = ({ handleAddMemo }) => {\r\n  const [memoText, setMemoText] = useState(\"\");\r\n  const { selectedColor } = useContext(colorContext);\r\n  const characterLimit = 200;\r\n  const handleChange = (e) => {\r\n    if (characterLimit - e.target.value.length >= 0)\r\n      setMemoText(e.target.value);\r\n  };\r\n\r\n  const handleSaveClick = () => {\r\n    if (memoText.trim().length > 0) {\r\n      handleAddMemo(memoText, selectedColor);\r\n      setMemoText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledMemo color={selectedColor}>\r\n      <StyledTextArea\r\n        placeholder=\"Add New Memo...\"\r\n        cols=\"10\"\r\n        rows=\"8\"\r\n        value={memoText}\r\n        onChange={handleChange}\r\n      ></StyledTextArea>\r\n      <div>\r\n        <small>{characterLimit - memoText.length} Remaining</small>\r\n        <StyledSaveIcon onClick={handleSaveClick} />\r\n      </div>\r\n    </StyledMemo>\r\n  );\r\n};\r\n\r\nexport default AddMemo;\r\n","import { useContext } from \"react\";\r\nimport Memo from \"./Memo\";\r\nimport AddMemo from \"./AddMemo\";\r\nimport styled from \"styled-components\";\r\nimport { colorContext } from \"../contexts/ColorContext\";\r\n\r\nconst StyledMemoContainer = styled.section`\r\n  display: grid;\r\n  grid-gap: 1rem;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n`;\r\n\r\nconst MemoList = ({ memos, handleAddMemo, handleDeleteMemo }) => {\r\n  const { selectedColor } = useContext(colorContext);\r\n  return (\r\n    <StyledMemoContainer>\r\n      {selectedColor && <AddMemo handleAddMemo={handleAddMemo} />}\r\n      {memos.map((memo) => (\r\n        <Memo\r\n          key={memo.id}\r\n          id={memo.id}\r\n          text={memo.text}\r\n          date={memo.date}\r\n          color={memo.color}\r\n          handleDeleteMemo={handleDeleteMemo}\r\n        />\r\n      ))}\r\n    </StyledMemoContainer>\r\n  );\r\n};\r\n\r\nexport default MemoList;\r\n","import styled from \"styled-components\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\n\r\nconst StyledInputContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  background-color: #e9ecef;\r\n  border-radius: 2em;\r\n  padding: 0.3em;\r\n  margin-bottom: 1.5em;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  border: none;\r\n  background-color: #e9ecef;\r\n  width: 90%;\r\n  font-size: 1rem;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst StyledDeleteIcon = styled(AiOutlineSearch)`\r\n  cursor: pointer;\r\n  font-size: 1.7rem;\r\n`;\r\n\r\nconst Search = ({ handleSearchMemo }) => {\r\n  return (\r\n    <StyledInputContainer>\r\n      <StyledInput\r\n        type=\"text\"\r\n        placeholder=\"Find Your Memo..\"\r\n        onChange={(e) => handleSearchMemo(e.target.value)}\r\n      />\r\n      <StyledDeleteIcon />\r\n    </StyledInputContainer>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useContext } from \"react\";\r\nimport { colorContext } from \"../contexts/ColorContext\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst StyledPalette = styled(motion.div)`\r\n  width: 1.5rem;\r\n  height: 1.5rem;\r\n  border-radius: 50%;\r\n  margin: 0 0.7em;\r\n  background-color: ${(props) => props.color};\r\n  cursor: pointer;\r\n  boxshadow: \"0 0 0 0 rgb(47, 72, 88)\";\r\n`;\r\n\r\nconst ColorPalette = () => {\r\n  const colors = [\"#F9F871\", \"#9BDE7E\", \"#4BBC8E\", \"#039590\", \"#1C6E7D\"];\r\n  const { setSelectedColor } = useContext(colorContext);\r\n\r\n  return (\r\n    <>\r\n      {colors.map((color) => (\r\n        <StyledPalette\r\n          key={color}\r\n          color={color}\r\n          onClick={() => setSelectedColor(color)}\r\n          initial={{ x: 0 }}\r\n          animate={{ x: 30 }}\r\n          whileHover={{\r\n            scale: 1.1,\r\n            boxShadow: \"0 0 0 3px rgb(47, 72, 88)\",\r\n          }}\r\n          transition={{ type: \"spring\", stiffness: 300 }}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ColorPalette;\r\n","import ColorPalette from \"./ColorPalette\";\r\nimport { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\n\r\nconst StyledHeader = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1em;\r\n  h1 {\r\n    font-size: 2.5rem;\r\n  }\r\n`;\r\n\r\nconst StyledPlusButton = styled(motion.button)`\r\n  cursor: pointer;\r\n  font-size: 2rem;\r\n  margin-left: 0.5em;\r\n  background: none;\r\n  border: none;\r\n`;\r\n\r\nconst Header = ({ handleOpenPalette, openPalette }) => {\r\n  return (\r\n    <StyledHeader>\r\n      <h1>Memo</h1>\r\n      <StyledPlusButton\r\n        whileHover={{\r\n          scale: 1.1,\r\n        }}\r\n        onClick={() => handleOpenPalette(!openPalette)}\r\n      >\r\n        <AiOutlinePlusCircle />\r\n      </StyledPlusButton>\r\n\r\n      {openPalette && <ColorPalette />}\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState, useEffect } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport MemoList from \"./components/MemoList\";\r\nimport Search from \"./components/Search\";\r\nimport Header from \"./components/Header\";\r\nimport styled from \"styled-components\";\r\nimport { colorContext } from \"./contexts/ColorContext\";\r\n\r\nconst StyledContainer = styled.section`\r\n  max-width: 960px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst App = () => {\r\n  const [memos, setMemos] = useState([]);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [openPalette, setOpenPalette] = useState(false);\r\n  const [selectedColor, setSelectedColor] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const savedMemos = JSON.parse(localStorage.getItem(\"react-memo-data\"));\r\n\r\n    if (savedMemos) {\r\n      setMemos(savedMemos);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"react-memo-data\", JSON.stringify(memos));\r\n  }, [memos]);\r\n\r\n  const addMemo = (text, color) => {\r\n    const date = new Date();\r\n    const newMemo = {\r\n      id: nanoid(),\r\n      text,\r\n      date: date.toLocaleDateString(),\r\n      color,\r\n    };\r\n    const newMemos = [...memos, newMemo];\r\n    setMemos(newMemos);\r\n  };\r\n\r\n  const deleteMemo = (id) => {\r\n    const newMemos = memos.filter((memo) => memo.id !== id);\r\n    setMemos(newMemos);\r\n  };\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <colorContext.Provider value={{ selectedColor, setSelectedColor }}>\r\n        <Header handleOpenPalette={setOpenPalette} openPalette={openPalette} />\r\n        <Search handleSearchMemo={setSearchText} />\r\n        <MemoList\r\n          memos={memos.filter((memo) =>\r\n            memo.text.toLowerCase().includes(searchText)\r\n          )}\r\n          handleAddMemo={addMemo}\r\n          handleDeleteMemo={deleteMemo}\r\n        />\r\n      </colorContext.Provider>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}